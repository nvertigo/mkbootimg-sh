#!/sbin/busybox sh

cat << CTAG
{
    name:ADVANCED,
    elements:[
      	{ SPane:{
		title:"Low Memory Killer",
      	}},
	{ SDescription:{
		description:" LMK Minfree controls how much memory each app type can hold, and is responsible for memory management for multitasking; all values are multiplied by 256 pages."
	}},
	{ SDescription:{
		description:" Defaults are: 48 - 60 - 72 - 84 - 96 - 120 MB"
	}},
	{ SDescription:{
		description:""
	}},
`
	for LMK in 1 2 3 4 5 6; do
		echo '{ SSeekBar:{ '
			case $LMK in
			1)
				echo 'title:"Foreground App", description:" The application currenty on the screen and running."' ;;
			2)
				echo 'title:"Visible App", description:" The application that is open and running in background."' ;;
			3)
				echo 'title:"Secondary Server", description:" This is a service an application needs that is alive and ready."' ;;
			4)
				echo 'title:"Hidden App", description:" An idle process that wakes up on application request."' ;;
			5)
				echo 'title:"Content Provider", description:" Apps that provide data (content) to the system."' ;;
			6)
				echo 'title:"Empty App", description:" Apps closed by the user but ready to run."' ;;
			esac
			echo ', action:"minfree '${LMK}'",
			min:10, max:200 }},'
	done
`
      	{ SDescription:{
		description:""
      	}},
      { SPane:{
		title:"LMK Whitelist",
		description:" Allows certain apps to be exempt from being killed until absolutely necessary to avoid out-of-memory (OOM)."
      }},
	{ SDescription:{
		description:" "
	}},
	{ SCheckBox:{
                label:"Do-Not-Kill System Processes List",
                default:`cat /sys/module/lowmemorykiller/parameters/donotkill_sysproc`,
                action:"generic /sys/module/lowmemorykiller/parameters/donotkill_sysproc"
        }},
      	{ SDescription:{
		description:""
      	}},
	{ SOptionList:{
		title:"Exempt System Processes",
		action:"whitelist set sys",
		default:`/res/synapse/actions/whitelist set sys`,
		values:[
`
			for SYSPROC in \`/res/synapse/actions/whitelist list sys\`; do
			  echo "\"$SYSPROC\","
			done
`
		]
	}},
	{ SDescription:{
		description:" "
	}},
	{ SCheckBox:{
                label:"Do-Not-Kill User Processes List",
                default:`cat /sys/module/lowmemorykiller/parameters/donotkill_proc`,
                action:"generic /sys/module/lowmemorykiller/parameters/donotkill_proc"
        }},
	{ SDescription:{
		description:" "
	}},
	{ SOptionList:{
		title:"Exempt User Processes",
		action:"whitelist set user",
		default:`/res/synapse/actions/whitelist set user`,
 		values:[
`
			for PROC in \`/res/synapse/actions/whitelist list user\`; do
			  echo "\"$PROC\","
			done
`
		]
	}},
      	{ SDescription:{
		description:""
      	}},
      { SDescription:{
        description:" The process lists above are view only. To add processes, check the SkyHigh/Synapse sdcard folder for the parsed files and add one process name per line. Lists updated on reboot.",
      }},
      	{ SDescription:{
		description:""
      	}},
      	{ SPane:{
		title:"Kernel Entropy"
      	}},
	{ SDescription:{
		description:""
	}},
	{ SLiveLabel:{
		title:"Entropy Available",
		refresh:1000,
		action:"live entropy"
	}},
	{ SSeekBar:{
		title:"Read Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/read_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/read_wakeup_threshold"
	}},
	{ SSeekBar:{
		title:"Write Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/write_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/write_wakeup_threshold"
	}},
      	{ SDescription:{
		description:""
	}},
	{ SPane:{
		title:"Gentle Fair Sleepers",
		description:" Sleeper Fairness is a concept used by CFS which treat sleeping/waiting tasks as if they were in a run queue. This implies tasks which spend most of the time waiting for an user input and such will get a fair share of CPU when they need it. Disabling Gentle Fair Sleepers could improve UI responsiveness. Default is Disabled."
	}},
      	{ SDescription:{
		description:""
	}},
	{ SCheckBox:{
		label:"Enable or Disable Gentle Fair Sleepers",
		default:`cat /sys/kernel/sched/gentle_fair_sleepers`,
		action:"generic /sys/kernel/sched/gentle_fair_sleepers"
	}},
      	{ SDescription:{
		description:""
	}},
	{ SPane:{
		title:"randomize_va_space",
		description:" Disabling (0) virtual address randomisation may improve GUI responsiveness. Default is 0."
	}},
      	{ SDescription:{
		description:""
	}},
	{ SSeekBar:{
		title:"randomize_va_space",
		max:2,
		min:0,
		step:1,
		default:`cat /proc/sys/kernel/randomize_va_space`,
		action:"generic /proc/sys/kernel/randomize_va_space"
	}},
	{ SDescription:{
		description:" "
	}},
    ]
}
CTAG
